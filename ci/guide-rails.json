{
	"metadata": {
		"version": 1
	},
	"application": {
		"name": "netcorerest",
		"language": "DOTNET",
		"artifact_store": {
			"repositories": null
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"exit_actions": {},
				"deployment_strategy": {},
				"application_init": {},
				"packages": [
					{
						"name": "((application.name))",
						"downloads": [],
						"files": [
							"((application.name))*"
						]
					}
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"post_deployment_actions": {
					"instances": null,
					"loadbalanced": false,
					"loadbalancer": {
						"TargetGroupName": "",
						"TargetGroupPort": 0,
						"TargetGroupProtocol": "",
						"TargetType": "",
						"VPCID": "",
						"HealthCheckEnabled": false,
						"HealthCheckPort": "",
						"UnhealthyThresholdCount": 0
					}
				},
				"cache_info": {},
				"tasks": [
					{
						"name": "netcorerest",
						"steps": [
							{
								"name": "Restore",
								"definition": "Restore with nuget",
								"command": "nuget restore",
								"properties": null
							},
							{
								"name": "Build",
								"definition": "Build debug files",
								"command": "msbuild /t:Rebuild /p:Configuration=Debug",
								"properties": null
							},
							{
								"name": "Unit test and Coverage",
								"definition": "Unit test and coverage",
								"command": ".\\packages\\OpenCover.4.6.519\\tools\\OpenCover.Console.exe -register:Path64 -filter:+[((application.name))]*-[((application.name))]((application.name)).Tests.* -target:.\\packages\\Nunit.ConsoleRunner.3.9.0\\tools\\nunit3-console.exe \"-targetargs:((application.name))/bin/((application.name)).dll --result:test.xml;format=nunit3\" \"-output:coverage.xml\" -searchdirs:((application.name))/obj/Debug",
								"properties": null
							}
						],
						"docker_options": {}
					}
				]
			}
		],
		"exit_actions": {},
		"default_properties": [
			{
				"name": "os.type",
				"value": "windows2012R2",
				"type": "string"
			},
			{
				"name": "os.version",
				"value": "latest",
				"type": "string"
			}
		],
		"deployment_files": [],
		"application_init": {
			"command": "bin/start-service.sh"
		},
		"releases": []
	},
	"organization": {
		"orgname": "Tutorial"
	}
}